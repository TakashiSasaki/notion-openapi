components:
  schemas:
    CreatePageRequest:
      properties:
        children:
          description: List of block objects for the page content.
          items:
            type: object
          type: array
        parent:
          properties:
            database_id:
              description: The ID of the database where the page should be created.
              type: string
          required:
          - database_id
          type: object
        properties:
          additionalProperties:
            type: object
          description: The properties of the page.
          type: object
      required:
      - parent
      - properties
      type: object
    PagePropertyResponse:
      properties:
        has_more:
          type: boolean
        id:
          description: The unique identifier for the property.
          type: string
        next_cursor:
          nullable: true
          type: string
        object:
          type: string
        property:
          type: object
        type:
          type: string
      type: object
    PageResponse:
      properties:
        created_time:
          format: date-time
          type: string
        id:
          description: The unique identifier for the page.
          type: string
        last_edited_time:
          format: date-time
          type: string
        object:
          type: string
        parent:
          properties:
            database_id:
              description: The ID of the parent database.
              type: string
            type:
              type: string
          type: object
        properties:
          type: object
        url:
          description: URL to the created page.
          type: string
      type: object
    UpdatePageRequest:
      properties:
        archived:
          description: Whether to archive the page.
          type: boolean
        properties:
          additionalProperties:
            type: object
          description: The properties to update for the page.
          type: object
      required:
      - properties
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  description: API documentation for Notion's page management endpoints.
  title: Notion API
  version: 1.0.0
openapi: 3.1.0
paths:
  /v1/pages:
    post:
      operationId: createPage
      parameters:
      - description: Specifies the version of the Notion API to use.
        in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePageRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
          description: Successfully created a new page.
        '400':
          description: Bad request, invalid input parameters.
        '401':
          description: Unauthorized, missing or invalid authentication token.
        '403':
          description: Forbidden, insufficient permissions to create a page.
        '500':
          description: Internal server error.
      security:
      - bearerAuth: []
      summary: Create a new page in a Notion database.
      tags:
      - Pages
  /v1/pages/{page_id}:
    get:
      operationId: retrievePage
      parameters:
      - description: The ID of the page to retrieve.
        in: path
        name: page_id
        required: true
        schema:
          example: 9055718e65004899aec2007bef2e92cf
          type: string
      - description: Specifies the version of the Notion API to use.
        in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
          description: Successfully retrieved the page.
        '400':
          description: Bad request, invalid page ID.
        '401':
          description: Unauthorized, missing or invalid authentication token.
        '403':
          description: Forbidden, insufficient permissions to retrieve the page.
        '404':
          description: Page not found.
        '500':
          description: Internal server error.
      security:
      - bearerAuth: []
      summary: Retrieve a page object using its ID.
      tags:
      - Pages
    patch:
      operationId: updatePage
      parameters:
      - description: The ID of the page to update.
        in: path
        name: page_id
        required: true
        schema:
          example: 9055718e65004899aec2007bef2e92cf
          type: string
      - description: Specifies the version of the Notion API to use.
        in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePageRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
          description: Successfully updated the page.
        '400':
          description: Bad request, invalid input parameters.
        '401':
          description: Unauthorized, missing or invalid authentication token.
        '403':
          description: Forbidden, insufficient permissions to update the page.
        '404':
          description: Page not found.
        '500':
          description: Internal server error.
      security:
      - bearerAuth: []
      summary: Update properties of an existing page.
      tags:
      - Pages
  /v1/pages/{page_id}/properties/{property_id}:
    get:
      operationId: retrievePageProperty
      parameters:
      - description: The ID of the page.
        in: path
        name: page_id
        required: true
        schema:
          example: 9055718e65004899aec2007bef2e92cf
          type: string
      - description: The ID of the property to retrieve.
        in: path
        name: property_id
        required: true
        schema:
          type: string
      - description: Specifies the version of the Notion API to use.
        in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagePropertyResponse'
          description: Successfully retrieved the page property.
        '400':
          description: Bad request, invalid page or property ID.
        '401':
          description: Unauthorized, missing or invalid authentication token.
        '403':
          description: Forbidden, insufficient permissions to retrieve the page property.
        '404':
          description: Page or property not found.
        '500':
          description: Internal server error.
      security:
      - bearerAuth: []
      summary: Retrieve a specific property of a page.
      tags:
      - Pages
servers:
- description: Notion API Server
  url: https://api.notion.com
