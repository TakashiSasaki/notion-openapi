openapi: 3.1.0
info:
  title: Combined Notion API
  version: 1.0.0
  description: This is a combined OpenAPI document of various Notion API endpoints.
servers:
- url: https://api.notion.com/v1
paths:
  /search:
    post:
      summary: Search content in Notion
      description: 'Optimized for specific text queries and object types (page, database).
        Use smaller `page_size` for speed. Prioritizes directly shared items. Not
        for exhaustive listings or detailed database searches. Indexing delay may
        affect results; add a Refresh button to retry searches.

        '
      operationId: searchRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          description: Successful search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
      parameters:
      - name: Notion-Version
        in: header
        required: true
        schema:
          type: string
          example: 2022-06-28
  /blocks/{block_id}:
    get:
      description: Retrieves a Block object using the specified ID. If `has_children`
        is true, use the Retrieve block children endpoint. For page content, set the
        page ID as block_id. Requires read content capabilities; returns 403 if unauthorized.
      operationId: retrieveBlock
      parameters:
      - description: The ID of the block to retrieve.
        in: path
        name: block_id
        required: true
        schema:
          type: string
      - description: Specifies the version of the Notion API to use.
        in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockResponse'
          description: Successfully retrieved the block.
        '400':
          description: Bad request, invalid block ID.
        '401':
          description: Unauthorized, missing or invalid authentication token.
        '403':
          description: Forbidden, insufficient permissions to retrieve the block.
        '404':
          description: Block not found.
        '500':
          description: Internal server error.
      security:
      - bearerAuth: []
      summary: Retrieve a block object using its ID.
      tags:
      - Blocks
  /blocks/{block_id}/children:
    get:
      operationId: retrieveBlockChildren
      parameters:
      - description: The ID of the block whose children are to be retrieved.
        in: path
        name: block_id
        required: true
        schema:
          type: string
      - description: Pagination cursor for fetching the next set of results.
        in: query
        name: start_cursor
        required: false
        schema:
          type: string
      - description: The number of results to retrieve per page (default is 100).
        in: query
        name: page_size
        required: false
        schema:
          type: integer
      - description: Specifies the version of the Notion API to use.
        in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockChildrenResponse'
          description: Successfully retrieved the block's children.
        '400':
          description: Bad request, invalid input parameters.
        '401':
          description: Unauthorized, missing or invalid authentication token.
        '403':
          description: Forbidden, insufficient permissions to retrieve the block's
            children.
        '404':
          description: Block not found.
        '500':
          description: Internal server error.
      security:
      - bearerAuth: []
      summary: Retrieve the children of a block.
      tags:
      - Blocks
  /pages/{page_id}:
    get:
      operationId: retrievePage
      parameters:
      - in: path
        name: page_id
        required: true
        schema:
          description: The ID of the page to retrieve.
          format: uuid
          type: string
      - in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      - description: Filters the response to include only the specified page properties.
        in: query
        name: filter_properties
        required: false
        schema:
          description: A list of page property value IDs associated with the page.
            Use this param to limit the response to specific page property values.
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
          description: Successful retrieval of a page
        '400':
          description: 'Bad Request: The request parameters are invalid.'
        '403':
          description: 'Forbidden: The integration does not have the required read
            content capabilities.'
        '404':
          description: 'Not Found: The page does not exist or the integration does
            not have access to the page.'
        '429':
          description: 'Too Many Requests: The request exceeds the API rate limits.'
      summary: Retrieve a page
  /pages/{page_id}/properties/{property_id}:
    get:
      description: Retrieves a property_item object for a given page_id and property_id.
        Depending on the property type, the object returned will either be a value
        or a paginated list of property item values. For more details, refer to the
        Notion API documentation.
      operationId: retrievePageProperty
      parameters:
      - description: Identifier for a Notion page
        in: path
        name: page_id
        required: true
        schema:
          type: string
      - description: Identifier for a page property
        in: path
        name: property_id
        required: true
        schema:
          type: string
      - description: Specifies the version of the Notion API to use.
        in: header
        name: Notion-Version
        required: true
        schema:
          example: '2022-06-28'
          type: string
      - description: The max number of property item objects on a page for paginated
          properties.
        in: query
        name: page_size
        required: false
        schema:
          default: 100
          format: int32
          type: integer
      - description: For paginated properties, the start cursor for pagination.
        in: query
        name: start_cursor
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyItemResponse'
          description: Successful response with property item(s).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request or exceeds the request limits.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Page or property not found, or integration lacks access.
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests.
      security:
      - readContent: []
      summary: Retrieve a page property item.
      tags:
      - Page Properties
components:
  schemas:
    SearchRequest:
      type: object
      properties:
        query:
          type: string
          description: The search query.
        sort:
          type: object
          properties:
            timestamp:
              type: string
              enum:
              - last_edited_time
              description: The timestamp criteria for sorting results.
            direction:
              type: string
              enum:
              - ascending
              - descending
              description: The direction of sorting.
        filter:
          type: object
          properties:
            value:
              type: string
              enum:
              - page
              - database
              description: Filters results by object type.
            property:
              type: string
              enum:
              - object
              description: Filters by the object type property.
        start_cursor:
          type: string
          description: Cursor for paginating results.
        page_size:
          type: integer
          format: int32
          default: 100
          maximum: 100
          description: Number of items to include in response, max 100.
    SearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            description: An individual search result.
        next_cursor:
          type: string
          nullable: true
          description: The cursor to use for the next set of results.
        has_more:
          type: boolean
          description: Indicates if more results are available.
        type:
          type: string
          description: The type of the search result object.
        page_or_database:
          type: object
          description: Detailed information if the result is a page or database.
      required:
      - results
      - has_more
    BlockChildrenResponse:
      properties:
        has_more:
          type: boolean
        next_cursor:
          nullable: true
          type: string
        object:
          type: string
        results:
          items:
            type: object
          type: array
      type: object
    BlockResponse:
      properties:
        archived:
          description: Indicates if the block is archived.
          type: boolean
        created_time:
          format: date-time
          type: string
        has_children:
          description: Indicates if the block has children.
          type: boolean
        id:
          description: The unique identifier for the block.
          type: string
        last_edited_time:
          format: date-time
          type: string
        object:
          type: string
        properties:
          description: The block's properties based on its type.
          type: object
        type:
          description: The type of the block (e.g., paragraph, image).
          type: string
      type: object
    UpdateBlockChildrenRequest:
      properties:
        children:
          description: The list of block children to update.
          items:
            type: object
          type: array
      required:
      - children
      type: object
    UpdateBlockRequest:
      properties:
        properties:
          description: The properties to update for the block.
          type: object
        type:
          description: The type of block (e.g., paragraph, image).
          type: string
      required:
      - type
      type: object
    PageResponse:
      properties:
        created_time:
          description: The time when the page was created.
          format: date-time
          type: string
        has_more:
          description: Indicates if there are more items beyond the current limit
            of 25 references.
          type: boolean
        id:
          description: The unique identifier of the page.
          format: uuid
          type: string
        last_edited_time:
          description: The time when the page was last edited.
          format: date-time
          type: string
        object:
          example: page
          type: string
        parent:
          description: Information about the parent of the page.
          type: object
        properties:
          description: The properties of the page.
          type: object
      required:
      - object
      - id
      - created_time
      - last_edited_time
      - parent
      - properties
      type: object
    ErrorResponse:
      description: Error response schema.
      properties:
        message:
          type: string
        object:
          example: error
          type: string
        status:
          example: 400
          type: integer
      type: object
    PagePropertyResponse:
      properties:
        has_more:
          type: boolean
        id:
          description: The unique identifier for the property.
          type: string
        next_cursor:
          nullable: true
          type: string
        object:
          type: string
        property:
          type: object
        type:
          type: string
      type: object
    PropertyItemResponse:
      description: Response object for property items.
      properties:
        object:
          example: property_item
          type: string
      type: object
  responses: {}
  parameters: {}
  requestBodies: {}
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
